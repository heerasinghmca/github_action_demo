name: "Shell Commands"
on: 
  push:
    branches:
      - master
      - 'feature/*'
      - 'feature/**'
      - '!feature/facts'
    # branches-ignore: on of them will be used
    #   - master
    #   - feature/**
  # repository_dispatch: 
  #   types: ['build']
  # schedule:
  #   - cron: "*/5 * * * *"
  pull_request: 
    types: ['opened', 'reopened', 'closed', 'assigned']
env:
  WORK_ENV: ${{ secrets.DB_PASS }}
jobs: 
    run-python-command:
      runs-on: ubuntu-latest
      steps: 
        - name: env variable
          env:
            LOCAL_ENV: NGNIX
          run: echo "WORK_ENV is ${WORK_ENV} ${LOCAL_ENV}"
        - name: env variable outside scope
          run: echo "WORK_ENV is ${WORK_ENV} ${LOCAL_ENV}"
        - name: default env variables
          run: |
            echo "HOME is ${HOME}"
            echo "CI is ${CI}"
            echo "GITHUB_WORKFLOW is ${GITHUB_WORKFLOW}"
            echo "GITHUB_RUN_ID is ${GITHUB_RUN_ID}"
            echo "GITHUB_RUN_NUMBER is ${GITHUB_RUN_NUMBER}"
            echo "GITHUB_JOB is ${GITHUB_JOB}"
            echo "GITHUB_ACTION is ${GITHUB_ACTION}"
            echo "GITHUB_ACTION_PATH is ${GITHUB_ACTION_PATH}"
            echo "GITHUB_ACTIONS is ${GITHUB_ACTIONS}"
            echo "GITHUB_ACTOR is ${GITHUB_ACTOR}"
            echo "GITHUB_REPOSITORY is ${GITHUB_REPOSITORY}"
            echo "GITHUB_EVENT_NAME is ${GITHUB_EVENT_NAME}"
            echo "GITHUB_EVENT_PATH is ${GITHUB_EVENT_PATH}"
            echo "GITHUB_WORKSPACE is ${GITHUB_WORKSPACE}"
            echo "GITHUB_SHA is ${GITHUB_SHA}"
            echo "GITHUB_REF is ${GITHUB_REF}"
            echo "GITHUB_HEAD_REF is ${GITHUB_HEAD_REF}"
            echo "GITHUB_BASE_REF is ${GITHUB_BASE_REF}"
        - name: "python command"
          run: |
            import platform
            print(platform.processor())
          shell: python
    
    run-ruby-command:
      runs-on: ubuntu-latest
      needs: ['run-python-command']
      steps: 
        - uses: actions/checkout@v2
        - name: Set up Ruby 2.6
          uses: actions/setup-ruby@v1
          with:
            ruby-version: 2.6

    run-shell-command:
      runs-on: ubuntu-latest
      needs: ['run-python-command','run-ruby-command']
      steps: 
        - name: "echo string"
          run: echo "Hello World"
        - name: "multiline script"
          run: |
            node -v
            npm -v
            python -v
    
    run-action:
      runs-on: ubuntu-latest
      steps:
        - name: payload
          run: echo ${{ github.event.client_payload.env }}
        - name: list files before checkout
          run: |
            pwd
            ls -a
            echo $GITHUB_SHA
            echo $GITHUB_REPOSITORY
            echo $GITHUB_WORKSPACE
            echo " ${{ github.token }}"
        - name: Taking checkout
          uses: actions/checkout@v1
        - name: list files after checkout
          run: |
            pwd
            ls -a
        - name: Running using external actions
          id: greeting
          uses: actions/hello-world-javascript-action@v1 #here you can use branch, version or commit id
          with: 
            who-to-greet: 'Mona the Octocat'
        - name: Log Greeting Time
          run: echo "time"

    apply-github-label:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/labeler@v2
          with:
            repo-token: ${{ secrets.GITHUB_TOKEN }}

    create-issue-on-commit:
      runs-on: ubuntu-latest
      steps:
        - name: Create issue using REST API
          run: |
            curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/issues \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data '{
              "title": "Automated issue for commit: ${{ github.sha }}",
              "body": "This issue got automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
              }'